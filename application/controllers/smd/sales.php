<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

require_once('smd_controller.php');
class Sales extends Smd_Controller {
	public function __construct(){
		parent::__construct();
		if(empty($this->user) || $this->user['grade'] !== 'SMD'){
			$this->re_signin();
		}		
		$this->nav_menus['sales']['active'] = true;
		$this->load->model('sales_model');
	}
	
	public function index()
	{
		$this->nav_menus['sales']['sub_menus']['']['active'] = true;
		$this->load_view('sales/list');
	}

	public function import_sales(){
		if($this->input->server('REQUEST_METHOD') == 'POST'){
			$provider = $this->input->post('provider');
			if($provider == 'Transamerica'){
				$count = array(
					'name' => 0,
					'telephone' => 0,
					'email' => 0,
					'address' => 0,
					'city' => 0,
					'state' => 0,
					'zip' => 0,
					'dateofbirth' => 0,//: 08/21/1975
					'gender' => 'gender',
				);	
				
				$transamerica_name_list = array(
						'policy#' => 'number',
						'status' => 'status',
						'issuedate' => 'issue_date',
						'Transamerica Financial Foundation IUL',
						'specifiedamount' => 'face_amount',
						'App Signed Date: 09/01/2018',
						'name' => 'name',
						'telephone' => 'telephone',
						'email' => 'email',
						'address' => 'address',
						'city' => 'city',
						'state' => 'state',
						'zip' => 'zip',
						'dateofbirth' => 'dob',//: 08/21/1975
						'gender' => 'gender',
						'name' => 'name',
						'telephone' => 'telephone',
						'email' => 'email',
						'address' => 'address',
						'city' => 'city',
						'state' => 'state',
						'zip' => 'zip',
						'dateofbirth' => 'dob',//: 08/21/1975
						'gender' => 'gender',
						'targetpremium' => 'target_premium'
				);
				$input_data1 = $this->input->post('text-input-1');
				$ll = explode("\n", $input_data1);
				$this->load->model('user_model');
				$rl = $this->user_model->get_list();
				$membership_codes = array();
				foreach($rl as $r){
					array_push($membership_codes, $r['membership_code']);
				}
				foreach($ll as $lll){
					$llla = explode("\t", trim($lll));
					$agent_code_list[trim($llla[0])] = trim($llla[1]);
				}
				$input_data = $this->input->post('text-input');
				$data_lines = explode("\n", $input_data);
				$data_array = array();
				$case_data = array('policies_provider' => 'Transamerica');
				foreach($data_lines as $line){
					$line = trim($line);
					if($line == 'This printed page w as generated by selecting the Print link.'){
						if(array_key_exists($case_data['policies_number'], $agent_code_list) 
							&& in_array($agent_code_list[$case_data['policies_number']], $membership_codes)){
							$case_data['policies_writing_agent'] = $agent_code_list[$case_data['policies_number']];
						}
						$data_array[$case_data['policies_number']] = $case_data;
						$case_data = array('policies_provider' => 'Transamerica');
						foreach($count as $n => $v){
							$count[$n] = 0;
						}
					}
					$ls = explode(":", $line);
					if(count($ls) == 0){
						continue;
					}
					$name = strtolower(str_replace(' ', '', trim($ls[0])));
					if(!array_key_exists($name, $transamerica_name_list)){
						continue;
					}
					$value = count($ls) > 1 ? trim($ls[1]) : null;
					if($name == 'email' && !filter_var($value, FILTER_VALIDATE_EMAIL)){
						$value = null;
					}
					if($name == 'dateofbirth' || $name == 'issuedate'){
						$value = date_format(date_create($value), 'Y-m-d');
					}
					if($name == 'gender'){
						$value = $value == 'Male' ? 'M' : 'F';
					}
					
					if(array_key_exists($name, $count)){
						if($count[$name] == 0){
							$case_data['policies_owner_'.$transamerica_name_list[$name]] = $value;
						}
						else if($count[$name] == 1){
							$case_data['policies_insured_'.$transamerica_name_list[$name]] = $value;
						}
						else if($count[$name] == 2 && $name == 'name'){
							$case_data['policies_writing_agent'] = $value;
						}
						$count[$name]++;
					}
					else{
						if($name == 'specifiedamount' || $name == 'targetpremium'){
							$new_value = '';
							for($i = 0; $i < strlen($value); ++$i){
								$ord = ord($value[$i]);
								if(($ord >= 48 && $ord <= 57) || $value[$i] == '.'){
									$new_value .= $value[$i];
								}
							}
							$value = intval($new_value);
						}
						$case_data['policies_'.$transamerica_name_list[$name]] = $value;
					}
				}
				if(count($data_array) > 0){
					$fields = array();
					foreach(current($data_array) as $n => $v){
						array_push($fields, $n);
					}
					$values = array();
					foreach($data_array as $n => $row){
						$rv = array();
						foreach($fields as $s => $f){
							if(array_key_exists($f, $row)){
								array_push($rv, "'".addslashes($row[$f])."'");
							}
							else{
								array_push($rv, "NULL");
							}
						}
						array_push($values, implode(",", $rv));
					}
					$this->sales_model->insert_policies($fields, $values);
				}
			}
			header('location:'.base_url().'smd/sales');
			return;
		}
		$this->load_view('sales/import_cases', array('sales_numbers' => array()));
	}
	
	public function get_sales_list(){
		$policy_types = array(
			'IL' => 'IUL+LTC',
			'I' => 'IUL',
			'A' => 'Annuity',
			'T' => 'Term',
		);
		$sales_status = array(
			'P' => '<span class="text-danger">Pending</span>',
			'I' => '<span class="text-success">Inforced</span>',
			'C' => '<span class="text-muted">Closed</span>',
			'CA' => '<span class="text-muted">Canceled</span>',
		);
		$search_str = trim($this->input->post('search'));
		$search = isset($search_str) && $search_str !== '' ? preg_split('/[^a-z0-9]/i', $search_str) : array();
		$current = $this->input->post('current');
		$row_count= $this->input->post('row_count');
		$sort = $this->input->post('sort');
		if(empty($sort)){
			//$sort = array('sales_date_submission' => 'ASC');
		}
		$filter = $this->input->post('filter');
		$ret = array(
			'current' => 1,
			'last' => 0,
			'row_count' => $row_count,
			'search' => $search_str,
			'rows' => array(),
			'total' => 0
		);
		$total = $this->sales_model->get_policy_total('', $search, $filter);
		if($total > 0){
			$ret = paginate($total, $current, $row_count);
			$ret['search'] = $search_str;
			$ret['rows'] = $this->sales_model->get_policy_list('', $sort, (($ret['current'] - 1) * $ret['row_count']).", ".$ret['row_count'], $search, $filter, array($this->user['membership_code'], '27QUE'));
			foreach($ret['rows'] as $i => $r){
				$ret['rows'][$i]['seq'] = ($current - 1) * $row_count + ($i + 1);
				$ret['rows'][$i]['policies_number'] = $r['policies_number'];
				$ret['rows'][$i]['policies_status'] = $r['policies_status'];
				$ret['rows'][$i]['policies_name'] = $r['policies_insured_name'].'<br/>'.$r['policies_owner_name'];
				$ret['rows'][$i]['policies_issue_date'] = $r['policies_issue_date'];
				$ret['rows'][$i]['policies_provider'] = '<img style="height:30px" src="'.base_url().'src/img/'.$r['policies_provider'].'_logo.ico">';
				$writing_agent = empty($r['agent1']) ? $r['policies_writing_agent'] : $r['agent1'].'('.$r['policies_writing_agent'].')';
				$split_agent = '';
				if(!empty($r['writing_split_agent'])){
					if(!empty($r['agent2'])){
						$split_agent = $r['agent2'].'('.$r['policies_split_agent'].')';
					}
					else{
						$split_agent = $r['policies_split_agent'];
					}
				}
				$ret['rows'][$i]['policies_agents'] = $writing_agent.(empty($split_agent) ? "" : "<br/>$split_agent");
				$ret['rows'][$i]['notes'] = $r['policies_notes'];
				$ret['rows'][$i]['action'] = array('view' => base_url().'smd/sales/sales_case/'.$r['policies_id']);
			}
		}
		echo json_encode($ret);
	}
	
	public function sales_case($policies_id = null){
		if($this->input->server('REQUEST_METHOD') == 'POST'){
			$prop = $this->input->post();
			$res = $this->sales_model->update_policy($prop, "policies_id='$policies_id'");
			return;
		}
		
		$policies = $this->sales_model->get_policies($policies_id);
		$users = $this->user_model->get_list('', $sort = array('last_name' => 'ASC', 'first_name' => 'ASC'));
		$users1 = array();
		foreach($users as $u){
			array_push($users1, array('text' => $u['first_name'].' '.$u['last_name'].' ('.$u['membership_code'].')', 'value' => $u['membership_code']));
		}
		
		if(count($policies) > 0){
			$policy = $policies[0];
		}
		else{
			$policy = array();
		}
		$this->load_view('sales/case_view', array('policy' => $policy, 'users' => $users1));
	}
}

